Все домашние задания будут сдаваться используя git и github.com. Как пользоваться данными инструментами вы можете посмотреть на видео.

У вас должен быть ОДИН РЕПОЗИТОРИЙ на ВСЕ ДОМАШКИ. В репозитории для каждой домашки должен быть создан пакет (папка) с именем home_work_n где n это порядковый номер домашнего задания. Репозиторий должен быть проинициализирован в корневой папке модуля homework.
В репозитории я должен увидеть только папку src, а в ней пакеты home_work_1, home_work_2, home_work_3, home_work_4... и т.д.
В корне папки home_work_n должен находиться файла README в котором написано какой класс какой пункт ДЗ решает
Задания помеченные * являются заданиями требующие дополнительные знания которые мы приобретём далее по курсу, вы их можете попытаться решить почитав интернет или документацию
Задания помеченные ** являются заданиями требующие не только доп знания но и креативный подход и являются больше творческими заданиями
Задания помеченные * и ** проверяются только в случае выполнения задач без звёздочек

На оценку влияет (в порядке приоритета):
 1. Чистота кода и форматирование кода
 2. Решенная задача
 3. Дополнительные проверки на ввод некорректных данных
 4. Документация в коде
 5. Задачи обозначенные звёздочками

Данное пояснение акутально для всех домашних заданий на данном курсе

Весь код данной домашней работы должен быть в папке home_work_1

Получение значений через консоль: https://metanit.com/java/tutorial/2.9.php

1. Побитовые операции:
	1.1 http://developer.alexanderklimov.ru/android/java/bitwise.php
	1.2 Использовать побитовые И и ИЛИ с двумя числами введёнными через консоль.
	1.3 В комментариях к каждой операции написать двоичный код (8 бит) двух, любых, выбранными вами чисел и результата операций с ними.
	1.4 Попробуйте сделать побитовую операцию с числом 42.5, опишите результат в комментариях в классе с заданием.
2. Изучить приоритетность операторов по таблице в презентации. Сначала посчитать результаты всех ниже приведённых примеров устно, а потом проверить в IDE (в случае ошибок свериться с таблицей приоритетов, повторять просчёт примеров до полного соответствия). Результатом МОЖЕТ БЫТЬ ОШИБКА компиляции, МОЖЕТ БЫТЬ ОШИБКА выполнения программы или корректный результат. Все значения в этих переменных должны быть записаны в int и boolean переменные. Напротив каждой строчки нужно написать комментарий с результатом и объяснением почему вы получили такой результат.
	2.0 ВНИМАНИЕ --8 значит что вам нужно создать переменную, например а, и проинициализировать её 8, а дальше её использовать как --а. Данная переменная во всех выражениях должна равняться 8;
	2.1 5 + 2 / 8
	2.2 (5 + 2) / 8
	2.3 (5 + 2++) / 8
	2.4 (5 + 2++) / --8
	2.5 (5 * 2 >> 2++) / --8
	2.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8
	2.7 (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8
	2.8 6 - 2 > 3 && 12 * 12 <= 119
	2.9 true && false
3. Изучить библиотеку (класс) Math из jdk. (https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html). Отразить эксперименты в сданной домашней работе. Материалов в интернете очень много
4. Разбираемся с операторами ветвления. Каждую задачу в отдельном классе. Пояснения по задачам сотреть в презентации и на сайте по ссылке в презентации.
	4.1 Определить нечётное число
	4.2 Среди трёх чисел найти среднее
	4.3 Проверка делимости одного числа на другое
	4.4 Перевести байты в килобайты или наоборот
	4.5 Буква или иной символ
	4.6 Определить високосный год или нет
5.* Создать СТАТИЧЕСКИЙ метод sleepIn рядом с методом main. (Взято с https://codingbat.com/prob/p187868).
	5.1 Данный метод будет принимает два параметра
	5.2 Будет отвечать на вопрос спать ли дальше (да\нет) (возвращать true либо false).
	5.3 Первый параметр boolean weekday обозначает рабочий день
	5.4 Второй параметр boolean vacation обозначает отпуск.
	5.5 Если у нас отпуск или не рабочий день то мы можем спать дальше
	5.6 На основании ответа от метода sleepIn вывести сообщение можем спать дальше или пора идти на работу
6. Запросить у пользователя через консоль его имя. В данном задании у вас должно получиться 3 класса.
	Что в итоге надо сделать (общее условие):
		1. Если имя будет равно имени "Вася" тогда в консоль должно вывести сообщение "Привет!" на одной строке, а на второй "Я тебя так долго ждал".
		2. Если имя будет равно имени "Анастасия" тогда в консоль должно вывести сообщение "Я тебя так долго ждал".
		3. В случае если это будет другое имя то вывести сообщение "Добрый день, а вы кто?".
	Как это сделать:
		6.1 Написать в отдельном классе main метод и в нём код который будет выполнять общее условие при помощи if else
		6.2 Написать в отдельном классе main метод и в нём код который будет выполнять общее условие при помощи if else if
		6.3 Написать в отдельном классе main метод и в нём код который будет выполнять общее условие при помощи switch
	ВНИМАНИЕ! В примерах c if для сравнения имён использовать код вида Objects.equals("Имя1", "Имя2").
7.* Создать СТАТИЧЕСКИЙ метод createPhoneNumber рядом с методом main, данный метод будет принимает один параметр и будет возвращать строку в отформатированном виде. В метод будет передаваться массив из 10 цифр (от 0 до 9). Данные цифры должны быть помещены в строку формата: (XXX) XXX-XXXX. Например передан массив: {1,2,3,4,5,6,7,8,9,0}, возвращаемый результат: (123) 456-7890. (Взято с https://www.codewars.com/kata/525f50e3b73515a6db000b83/train/java). В задании нельзя использовать колекции, стрима.
8.** Создать СТАТИЧЕСКИЙ метод String toBinaryString(byte number) и возвращает двоичное представление числа. В методе можно использовать только обычную математику которая описана в теории. Если число отрицательное то вернуть дополнительный код. Теория https://planetcalc.ru/747. Пример:
	8.1 Вводим: 42.  Возвращает: 00101010
	8.2 Вводим: 15.  Возвращает: 00001111
	8.3 Вводим: -42. Возвращает: 11010110
	8.4 Вводим: -15. Возвращает: 11110001

!!!!! Далее задания выполнять только после прохождения темы "Тестирование" на курсе !!!!!!

9. Переделать задание 6.
	9.1 Создать интерфейс ICommunicationPrinter. В данном интерфейсе должен быть объявлен метод String welcom(String name)
	9.2 Классы созданные ранее должны реализовывать интерфейс ICommunicationPrinter выполняя поставленную задачу в задании 5 и более не иметь точки входна внутри себя.
10. Протестировать классы созданные в 4-7 задании. Если не выполнили задачи с *, то выполнить